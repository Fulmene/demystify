Demystify Installation Requirements

This file describes how to setup your Linux environment in order to build
and run Demystify under Python3. The 7 things that need to be installed are:

Java 1.6 or later
Python 3.2
jpackage-utils 1.7.5 or later
ANTLR 3.4.1 *
antlr3 script (available in this repo in antlr3/)
python-progressbar 2.3
ANTLR Python3 runtime *

============================================================================
* These items require some special setup due to the Python3 target for ANTLR
being not yet accepted into the main ANTLR project.
If you don't want to use this *experimental, beta* code, then stop, go back
and check out or download the "master" branch of Demystify rather than the
"python3" branch this snapshot came from.
============================================================================

The order isn't necessarily fixed but some things are dependent on others.

I ran through this list on a debian squeeze machine and recorded the commands
I used to install the components.

1) Java 1.6.0 runtime (or later)
Required to run ANTLR

Install using your package manager.

Installed on a debian squeeze machine:
    $ sudo apt-get install java-common
    $ sudo apt-get install openjdk-6-jdk

2) Python 3.2 or later (not Python 3.1!)
Required to run demystify

Install using your package manager or from python.org. Pick one.
I recommend using the package manager if possible.

a) Package manager
    Check that your package manager has python3.2.
        $ sudo apt-get install python3.2
        $ python3 --version
        Python 3.2.3
    If the python3 symlink points at an older version than python3.2,
    you may wish to update that to point to python3.2, and use "python3"
    in place of python3.2.
        $ sudo rm /usr/bin/python3
        $ sudo ln -s python3.2 /usr/bin/python3.2

b) From python.org source (building source)
Note that installing from source will overwrite /usr/bin/python3 to be a symlink
to python3.2.
    $ wget python.org/ftp/python/3.2.3/Python-3.2.3.tgz
    $ tar xf Python-3.2.3.tgz
    $ cd Python-3.2.3/
    $ ./configure --prefix=/usr
    $ make
    $ sudo make install
    $ ls -l /usr/bin/python3*

3) jpackage-utils 1.7.5 (or later)
Required to use the antlr3 convenience script (5)

The RPM can be found at:
http://mirrors.dotsrc.org/jpackage/5.0/generic/free/repoview/jpackage-utils.html

Installed on a debian squeeze machine:
    $ wget mirrors.dotsrc.org/jpackage/5.0/generic/free/RPMS/jpackage-utils-5.0.0-2.jpp5.noarch.rpm
    $ sudo alien -k jpackage-utils-5.0.0-2.jpp5.noarch.rpm
    $ sudo dpkg -i jpackage-utils_5.0.0-2.jpp5_all.deb

On some machines (like the Debian machine I'm installing this on as I write
these helpful instructions), jpackage-utils will want to use a folder that
contains a bunch of symlinks, but the folder itself isn't created. Check to
see if /usr/lib/jvm-exports contains a folder named "java-6-openjdk", and if
not, create a symlink, via:
    $ sudo ln -s ../jvm/java-6-openjdk /usr/lib/jvm-exports/java-6-openjdk

(You should also check that /usr/lib/jvm/java-6-openjdk exists.)

4) ANTLR 3.4.1 (or later 3.4 release)
Required to generate the DemystifyParser

You want to grab a set of three jar files from the ANTLR and StringTemplate
websites and put them in a location where jpackage will find them, such as
/usr/share/java.

    antlr-runtime-3.4.jar
        Contains some of the necessary classes to run ANTLR.
        Available at http://www.antlr.org/download/
    antlr-3.4.1-SNAPSHOT.jar
        Contains a very up-to-date snapshot of ANTLR3, including
        Python template files necessary for creating Python lexers and parsers.
        Available at http://www.antlr.org/depot/antlr3/tool/target
    ST-4.0.5.jar
        StringTemplate v4 is an ANTLR 3 dependency and is made by the same guy,
        so all you need is this jar in place as well.
        Available at http://www.stringtemplate.org/download.html.

Installation:
    $ wget www.antlr.org/download/antlr-runtime-3.4.jar
    $ wget www.antlr.org/depot/antlr3/tool/target/antlr-3.4.1-SNAPSHOT.jar
    $ wget www.stringtemplate.org/download/ST-4.0.5.jar
    $ sudo mv antlr-3.4.1-SNAPSHOT.jar antlr-runtime-3.4.jar ST-4.0.5.jar /usr/share/java

At the time of writing this file, the Python3 target is not yet incorporated
into ANTLR and so you will need to check out or download the target directly
from github.com/Zannick/antlr3 (python3 branch). Whichever you do, you'll
need to update the antlr-3.4.1-SNAPSHOT.jar you downloaded earlier with some
files from the new target: a pair of updated class files, and the Python3
templates ANTLR uses to output Python3 code.
    (download or check out the antlr3 repo)
    $ cd antlr3/tool/src/main/java
    $ javac -cp /usr/share/antlr-3.4.1-SNAPSHOT.jar:/usr/share/java/antlr-runtime-3.4.jar:/usr/share/java/ST-4.0.5.jar -sourcepath . org/antlr/codegen/*.java
    (check the class files exist)
    $ ls org/antlr/codegen/CodeGenerator.class org/antlr/codegen/Python3Target.class
    (update the jar file)
    $ cp /usr/share/java/antlr-3.4.1-SNAPSHOT.jar .
    $ zip -u antlr-3.4.1-SNAPSHOT.jar org/antlr/codegen/CodeGenerator.class org/antlr/codegen/Python3Target.class
    $ sudo mv antlr-3.4.1-SNAPSHOT.jar /usr/share/java

    (or, from the toplevel, cd antlr3/tool/src/main/resources
    $ cd ../resources
    $ cp /usr/share/java/antlr-3.4.1-SNAPSHOT.jar .
    $ zip -u antlr-3.4.1-SNAPSHOT.jar org/antlr/codegen/templates/Python3/*.stg
    $ sudo mv antlr-3.4.1-SNAPSHOT.jar /usr/share/java


5) antlr3 script (from this repo, in antlr3/)
    Note that if any of the filenames in (4) are different, you'll need to
    edit the antlr3 script to indicate that.

    $ sudo cp antlr3/antlr3 /usr/bin/antlr3
    $ sudo chown root:root /usr/bin/antlr3

======

At this point you should be able to run "antlr3" on the command line and get:
ANTLR Parser Generator  Version 3.4
usage: java org.antlr.Tool [args] file.g [file2.g file3.g ...]

If you don't, there was an issue installing something earlier:
    Can't find functions library, aborting
        jpackage-utils didn't install correctly
    Exception in thread "main" java.lang.NoClassDefFoundError: org/antlr/Tool
        Likely a classpath error. Change "exec" to "echo" in the antlr3
        script and run it again; this will output the command trying to be run.
        If it says "error: JVM_LIBDIR /usr/lib/jvm-exports/java-6-openjdk does
        not exist or is not a directory" where you'd expect the classpath, then
        see above for the jvm-exports workaround.
    Something else?
        Check that java 6 and jpackage-utils are actually installed?
        Maybe reinstall openjdk-6-jdk after jpackage-utils is installed.

======

6) python-progressbar 2.3

Download and install from http://code.google.com/p/python-progressbar/,
rather than using your package manager (which likely has an outdated version).

    $ wget python-progressbar.googlecode.com/files/progressbar-2.3.tar.gz
    $ tar xf progressbar-2.3.tar.gz
    $ cd progressbar-2.3/
    $ sudo python3.2 setup.py install

This (and the ANTLR runtime below) requires setuptools. Some distros may
already have it as part of python. If running:
    $ sudo python3.2 setup.py install
caused complaints about something in setuptools, you need setuptools.

Some distros might be able to just install it:
    $ sudo apt-get install python3-setuptools

For others, that may not work; you have to download a better setuptools:
    $ wget http://python-distribute.org/distribute_setup.py
    $ sudo python3.2 distribute_setup.py

And then try again:
    $ sudo python3 setup.py install

It works when you can:
    $ python3.2
    >>> import progressbar
    >>>
(i.e. with no errors)

7) ANTLR 3 Python3 runtime (requires download from github)

Assuming you downloaded or checked out the Zannick/antlr3 github earlier,
you already have a copy of the runtime ready to be installed. From wherever
you put the repo:
    $ cd antlr3/runtime/Python3
    $ sudo python3.2 setup.py install

Installing on debian squeeze:
    $ wget http://github.com/antlr/antlr3/tarball/master -O antlr3.tgz
    $ tar xf antlr3.tgz
    $ cd antlr-antlr3-8312471/runtime/Python3/
    $ sudo python3.2 setup.py install

It works when you can:
    $ python3.2
    >>> import antlr3
    >>>
(i.e. with no errors)

======

At this point, you should be done installing all of Demystify's dependencies.
To see if it works, change into the grammar directory and run:
    $ antlr3 Demystify.g

If it works, you will get a bunch of warning(138)s that I haven't figured out
how to silence, then it will exit silently. If you ls afterwards, you should
see a lot of Demystify*.py and *.tokens files that weren't there before.

Still with me? Go one directory level up and run:
    $ python3.2 demystify.py test

It should say "OK" several times as it runs each of the provided unit tests.
If so, hooray! Demystify is working on your machine, as evidenced by the
correctly parsing unit tests.

And that's all you need!
